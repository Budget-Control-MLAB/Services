version: '2.2'

services:
    database:
      container_name: budgetcontrol-db
      image: mysql:latest
      restart: unless-stopped
      env_file:
        - .env
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_DATABASE}
      volumes:
        - mysql_persistent:/var/lib/mysql
    bemodule:
      container_name: budgetcontrol-services
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./:/var/www/workdir
        - .env:/app/.env
        - ../logapp:/app/storage/logs
      depends_on:
        - database
        - cache
      restart: unless-stopped
    cache:
      container_name: budgetcontrol-redis
      image: redis:7.2-rc2-alpine
      restart: always
      env_file:
        - .env
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
      volumes: 
        - bc_cache:/data
    nginx:
      container_name: budgetcontrol-proxy
      image: nginx:stable-alpine
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./bin/nginx:/etc/nginx/conf.d
        - ./bin/certbot/conf:/etc/letsencrypt
        - ./bin/certbot/www:/var/www/certbot
    certbot:
      image: certbot/certbot
      container_name: budgetcontrol-certbot
      volumes:
      - ./bin/certbot/conf:/etc/letsencrypt
      - ./bin/certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mysql_persistent:
  bc_cache:
